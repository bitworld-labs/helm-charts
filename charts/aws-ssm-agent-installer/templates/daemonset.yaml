apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: ssm-installer-{{ $.Release.Name }}
  name: {{ $.Release.Name }}
  namespace: {{ $.Release.Namespace }}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: ssm-installer-{{ $.Release.Name }}
  template:
    metadata:
      labels:
        k8s-app: ssm-installer-{{ $.Release.Name }}
        k8s-app-version: {{ .Chart.AppVersion }}
    spec:
      containers:
      - args:
        - -c
        {{- if .Values.runAsSudo }}
        - echo '* * * * * {{ .Values.installUser }} {{ .Values.installCommand }} {{ .Values.installUrl }}
          && sudo rm -rf {{ .Values.installCronPath }}/ssmstart' > {{ .Values.installCronPath }}/ssmstart & tail -f > /dev/null
        {{- else }}
        - echo '* * * * * {{ .Values.installUser }} {{ .Values.installCommand }} {{ .Values.installUrl }}
          && rm -rf {{ .Values.installCronPath }}/ssmstart' > {{ .Values.installCronPath }}/ssmstart & tail -f > /dev/null
        {{- end }}
        command:
        - /bin/bash
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        {{- if $.Values.imagePullSecrets}}
        imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
          - name: {{ . }}
        {{- end }}
        {{- end}}
        name: ssm
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/cron.d
          name: cronfile
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/cron.d
          type: Directory
        name: cronfile
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
