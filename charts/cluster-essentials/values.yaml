# https://github.com/kubernetes-sigs/metrics-server/tree/master/charts/metrics-server
metrics-server:
  enabled: true
  defaultArgs:
  - --cert-dir=/tmp
  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  - --kubelet-use-node-status-port
  - --metric-resolution=15s
  - --kubelet-insecure-tls

# https://github.com/kubernetes/autoscaler/tree/master/charts/cluster-autoscaler
cluster-autoscaler:
  enabled: false
  autoDiscovery:
    clusterName: # cluster.local
  awsRegion: us-east-1

# https://github.com/devtron-labs/charts/tree/main/charts/rollout
rollout:
  enabled: false
  rollout:
    image: "quay.io/devtron/rollout:v0.6.2"
    resources:
      limits:
        memory: 200Mi
        cpu: 250m
      requests:
        memory: 100Mi
        cpu: 50m

# https://github.com/kedacore/charts/tree/master/keda
keda:
  enabled: false

# https://github.com/bitnami/charts/tree/master/bitnami/kubernetes-event-exporter
kubernetes-event-exporter:
  enabled: false
  config:
    logLevel: debug
    logFormat: pretty
    receivers:
      - name: "dump"
        file:
          path: "/dev/stdout"
          ## Example:
          ## layout:
          ##   message: "{{ .Message }}"
          ##   reason: "{{ .Reason }}"
          ##   type: "{{ .Type }}"
          ##   count: "{{ .Count }}"
          ##   kind: "{{ .InvolvedObject.Kind }}"
          ##   name: "{{ .InvolvedObject.Name }}"
          ##   namespace: "{{ .Namespace }}"
          ##   component: "{{ .Source.Component }}"
          ##   host: "{{ .Source.Host }}"
          ##
          layout: {}
    route:
      routes:
        - match:
            - receiver: "dump"

# https://github.com/aws/eks-charts/tree/master/stable/aws-load-balancer-controller
aws-load-balancer-controller:
  enabled: false
  clusterName: # cluster.local
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    # Automount API credentials for a Service Account.
    automountServiceAccountToken: true
  ingressClass: alb
  # The AWS region for the kubernetes cluster. Set to use KIAM or kube2iam for example.
  region:

  # The VPC ID for the Kubernetes cluster. Set this manually when your pods are unable to use the metadata service to determine this automatically
  vpcId:

# https://github.com/devtron-labs/charts/tree/main/charts/kube-prometheus-stack
kube-prometheus-stack:
  enabled: false
  fullnameOverride: ""
  grafana:
    enabled: false
    adminPassword: prom-operator
    ingress:
      ## If true, Grafana Ingress will be created
      ##
      enabled: false

      ## Annotations for Grafana Ingress
      ##
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"

      ## Labels to be added to the Ingress
      ##
      labels: {}

      ## Hostnames.
      ## Must be provided if Ingress is enable.
      ##
      # hosts:
      #   - grafana.domain.com
      hosts: []

      ## Path for grafana ingress
      path: /

      ## TLS configuration for grafana Ingress
      ## Secret must be manually created in the namespace
      ##
      tls: []
    persistence:
      type: pvc
      enabled: false
      # storageClassName: default
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      # annotations: {}
      finalizers:
        - kubernetes.io/pvc-protection
  prometheus:
    ingress:
      enabled: false

      # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
      # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
      # ingressClassName: nginx

      annotations: {}
      labels: {}

      ## Hostnames.
      ## Must be provided if Ingress is enabled.
      ##
      # hosts:
      #   - prometheus.domain.com
      hosts: []

      ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
      ##
      paths: []
      # - /

      ## For Kubernetes >= 1.18 you should specify the pathType (determines how Ingress paths should be matched)
      ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
      # pathType: ImplementationSpecific

      ## TLS configuration for Prometheus Ingress
      ## Secret must be manually created in the namespace
      ##
      tls: []
        # - secretName: prometheus-general-tls
        #   hosts:
        #     - prometheus.example.com
    prometheusSpec:
      storageSpec: {}
      ## Using PersistentVolumeClaim
      ##
      #  volumeClaimTemplate:
      #    spec:
      #      storageClassName: gluster
      #      accessModes: ["ReadWriteOnce"]
      #      resources:
      #        requests:
      #          storage: 50Gi